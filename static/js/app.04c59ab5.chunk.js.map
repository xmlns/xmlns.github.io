{"version":3,"sources":["hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","screens/ModalScreen.tsx","screens/NotFoundScreen.tsx","screens/TabOneScreen.tsx","screens/TabTwoScreen.tsx","navigation/LinkingConfiguration.ts","navigation/index.tsx","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf"],"names":["useColorScheme","_useColorScheme","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","ModalScreen","useState","name","setName","msg","setMsg","href","setHref","useEffect","subject","encodeURIComponent","updateAnchorHref","styles","container","image","uri","size","title","marginTop10","target","separator","label","onChangeText","marginTop20","onPress","Linking","openURL","StatusBar","Platform","OS","StyleSheet","create","flex","alignItems","justifyContent","marginTop","fontSize","fontWeight","marginVertical","height","width","NotFoundScreen","navigation","TouchableOpacity","replace","link","linkText","padding","paddingVertical","TabOneScreen","ScrollView","display","flexDirection","elevation","category","card","marginLeft","marginRight","avatar","position","companyTitle","secondaryText","crownCard","blackPosition","blackCompanyTitle","utmcCard","utmcPosition","marginBottom","margin","TabTwoScreen","pySQLCard","pySQLTitle","flightCard","flightPosition","flightTitle","recipeCard","telePosition","recipeTitle","teleCard","teleTitle","pySupportTitle","pySupportCard","linking","prefixes","config","screens","Root","TabOne","TabTwo","Modal","NotFound","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","Stack","createNativeStackNavigator","Navigator","Screen","component","BottomTabNavigator","options","headerShown","Group","screenOptions","presentation","BottomTab","createBottomTabNavigator","initialRouteName","tabBarActiveTintColor","tabBarIcon","MaterialIcons","headerRight","Pressable","navigate","opacity","pressed","FontAwesome","MaterialCommunityIcons","App","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","require","console","warn","useCachedResources","module","exports"],"mappings":"6yBAKe,SAASA,IACtB,OAAOC,c,0ECHM,GACbC,MAAO,CACLC,KAAM,OACNC,WAAY,OACZC,KAPmB,UAQnBC,eAAgB,OAChBC,gBATmB,WAWrBC,KAAM,CACJL,KAAM,OACNC,WAAY,OACZC,KAbkB,OAclBC,eAAgB,OAChBC,gBAfkB,S,wsBCSf,SAASE,EACdC,EACAC,GAEA,IAAMC,EAAQZ,IACRa,EAAiBH,EAAME,GAE7B,OAAIC,GAGKC,EAAOF,GAAOD,GAYlB,SAASI,EAAKL,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,GACMU,EAAQX,EAAc,CAAEP,MAAOe,EAAYT,KAAMU,GAAa,QAEpE,OAAO,cAAC,IAAD,GAAaF,MAAO,CAAC,CAAEI,SAASJ,IAAYG,IAG9C,SAASE,EAAKX,GACnB,IAAQM,EAAgDN,EAAhDM,MAAOC,EAAyCP,EAAzCO,WAAYC,EAA6BR,EAA7BQ,UAAcC,EAAzC,IAAwDT,EAAxD,GACMY,EAAkBb,EAAc,CAAEP,MAAOe,EAAYT,KAAMU,GAAa,cAE9E,OAAO,cAAC,IAAD,GAAaF,MAAO,CAAC,CAAEM,mBAAmBN,IAAYG,I,YCpChD,SAASI,IACtB,MAAwBC,mBAAS,IAAjC,WAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,WAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,mBAAS,IAAjC,WAAOK,EAAP,KAAaC,EAAb,KAiBA,OANAC,qBAAU,WACJN,GAAQE,GAVW,WACvB,IAAMK,EAAUC,mBAAmB,cAAcR,EAAf,SAClCK,EAAQ,sCACgCE,EADjC,SACiDC,mBACpDN,IAOFO,KAED,CAACT,EAAME,IAGR,eAAC,EAAD,CAAMX,MAAOmB,EAAOC,UAApB,UACE,cAAC,IAAD,CACEC,MAAO,CACLC,IAAK,oLAEPC,KAAM,MAER,cAAC,EAAD,CAAMvB,MAAOmB,EAAOK,MAApB,qBACA,cAAC,EAAD,CAAMxB,MAAOmB,EAAOM,YAApB,SACE,sEAEE,mBAAGZ,KAAK,wCAAwCa,OAAO,SAAvD,2BAMJ,cAAC,EAAD,CACE1B,MAAOmB,EAAOQ,UACd1B,WAAW,OACXC,UAAU,0BAGZ,cAAC,IAAD,CAAW0B,MAAM,YAAYC,aAAc,SAACpB,GAAD,OAAUC,EAAQD,MAE7D,cAAC,IAAD,CACEmB,MAAM,gBACN5B,MAAOmB,EAAOW,YACdD,aAAc,SAAClB,GAAD,OAASC,EAAOD,MAGhC,cAAC,IAAD,CACEa,MAAM,QACNxB,MAAOmB,EAAOW,YACdC,QAAS,kBAAMlB,GAAQmB,IAAQC,QAAQpB,MAGzC,cAACqB,EAAA,EAAD,CAAWlC,MAAuB,QAAhBmC,IAASC,GAAe,QAAU,YAK1D,IAAMjB,EAASkB,IAAWC,OAAO,CAC/BlB,UAAW,CACTmB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBhB,YAAa,CACXiB,UAAW,IAEbZ,YAAa,CACXY,UAAW,IAEblB,MAAO,CACLkB,UAAW,GACXC,SAAU,GACVC,WAAY,QAEdjB,UAAW,CACTkB,eAAgB,GAChBC,OAAQ,EACRC,MAAO,S,QCrFI,SAASC,EAAT,GAEuB,IADpCC,EACmC,EADnCA,WAEA,OACE,eAAC5C,EAAA,EAAD,CAAML,MAAOmB,EAAOC,UAApB,UACE,cAACrB,EAAA,EAAD,CAAMC,MAAOmB,EAAOK,MAApB,wCACA,cAAC0B,EAAA,EAAD,CACEnB,QAAS,kBAAMkB,EAAWE,QAAQ,SAClCnD,MAAOmB,EAAOiC,KAFhB,SAIE,cAACrD,EAAA,EAAD,CAAMC,MAAOmB,EAAOkC,SAApB,qCAMR,IAAMlC,EAASkB,IAAWC,OAAO,CAC/BlB,UAAW,CACTmB,KAAM,EACNjC,gBAAiB,OACjBkC,WAAY,SACZC,eAAgB,SAChBa,QAAS,IAEX9B,MAAO,CACLmB,SAAU,GACVC,WAAY,QAEdQ,KAAM,CACJV,UAAW,GACXa,gBAAiB,IAEnBF,SAAU,CACRV,SAAU,GACVvC,MAAO,a,QCjCI,SAASoD,EAAT,GAEkB,EAD/BP,WAEA,OACE,cAACQ,EAAA,EAAD,UACE,eAAC,EAAD,CAAMzD,MAAOmB,EAAOC,UAApB,UACE,cAAC,EAAD,CAAMpB,MAAOmB,EAAOK,MAApB,+BACA,cAAC,EAAD,CACExB,MAAOmB,EAAOQ,UACd1B,WAAW,OACXC,UAAU,0BAEZ,eAAC,EAAD,CACEF,MAAO,CACL0D,QAAS,OACTC,cAAe,OAHnB,UAME,cAAC,IAAD,CAASC,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAO2C,KAAvD,SACE,eAACZ,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,IAEfpC,MAAM,qBACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,mGAEPtB,MAAOmB,EAAO8C,SAGhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAO+C,SAApB,wCACA,cAAC,EAAD,CAAMlE,MAAOmB,EAAOgD,aAApB,uCAEA,cAAC,IAAD,CACE3C,MAAM,KACN4C,cAAc,wHAGhB,cAAC,IAAD,CACE5C,MAAM,aACN4C,cAAc,mGAGhB,cAAC,IAAD,CACE5C,MAAM,mBACN4C,cAAc,mHAGhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,qDAIpB,cAAC,IAAD,CAASR,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAOkD,UAAvD,SACE,eAACnB,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,IAEfpC,MAAM,sBACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,6EAEPtB,MAAOmB,EAAO8C,SAEhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAOmD,cAApB,wCAGA,cAAC,EAAD,CAAMtE,MAAOmB,EAAOoD,kBAApB,yCAGA,cAAC,IAAD,CACE/C,MAAM,oBACN4C,cAAc,iKAIhB,cAAC,IAAD,CACE5C,MAAM,mBACN4C,cAAc,oFAGhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,4EAIpB,cAAC,IAAD,CAASR,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAOqD,SAAvD,SACE,eAACtB,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,GAEfpC,MAAM,sBACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,iGAEPtB,MAAOmB,EAAO8C,SAEhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAOsD,aAApB,mCACA,cAAC,EAAD,CAAMzE,MAAOmB,EAAOgD,aAApB,yCAGA,cAAC,IAAD,CACE3C,MAAM,SACN4C,cAAc,wLAIhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,+EAU9B,IAAMjD,EAASkB,IAAWC,OAAO,CAC/B2B,OAAQ,CACNvB,UAAW,GACXqB,WAAY,KAEdQ,kBAAmB,CACjBnE,MAAO,QACPuC,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,GACZC,YAAa,OACbU,aAAc,IAEhBJ,cAAe,CACb3B,SAAU,GACVoB,WAAY,IACZrB,UAAW,EACXtC,MAAO,SAETgB,UAAW,CACTmB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElB0B,aAAc,CACZxB,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,GACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAET8D,SAAU,CACRvB,SAAU,GACVD,UAAW,EACXqB,WAAY,IACZ3D,MAAO,SAETqE,aAAc,CACZ9B,SAAU,GACVD,UAAW,EACXqB,WAAY,IACZ3D,MAAO,SAEToB,MAAO,CACLkB,UAAW,GACXC,SAAU,GACVC,WAAY,QAEdjB,UAAW,CACTkB,eAAgB,GAChBC,OAAQ,EACRC,MAAO,OAETsB,UAAW,CACT9B,KAAM,EACNQ,MAAO,IACPD,OAAQ,cACR6B,OAAQ,GACRrE,gBAAiB,UACjBF,MAAO,SAEToE,SAAU,CACRjC,KAAM,EACNQ,MAAO,IACPD,OAAQ,cACR6B,OAAQ,GACRrE,gBAAiB,UACjBF,MAAO,SAET0D,KAAM,CACJvB,KAAM,EACNQ,MAAO,IACPD,OAAQ,cACR6B,OAAQ,GACRrE,gBAAiB,YC5NN,SAASsE,IACtB,OACE,cAACnB,EAAA,EAAD,UACE,eAAC,EAAD,CAAMzD,MAAOmB,EAAOC,UAApB,UACE,cAAC,EAAD,CAAMpB,MAAOmB,EAAOK,MAApB,0BACA,cAAC,EAAD,CACExB,MAAOmB,EAAOQ,UACd1B,WAAW,OACXC,UAAU,0BAEZ,eAAC,EAAD,CACEF,MAAO,CACL0D,QAAS,OACTC,cAAe,OAHnB,UAME,cAAC,IAAD,CAASC,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAOqD,SAAvD,SACE,eAACtB,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,GAEfpC,MAAM,OACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,qFAEPtB,MAAOmB,EAAO8C,SAEhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAO+C,SAApB,sCACA,cAAC,EAAD,CAAMlE,MAAOmB,EAAOgD,aAApB,4BACA,cAAC,IAAD,CACE3C,MAAM,wBACN4C,cAAc,6JAEhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,kDAKpB,cAAC,IAAD,CAASR,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAO0D,UAAvD,SACE,eAAC3B,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,GAEfpC,MAAM,OACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,sGAEPtB,MAAOmB,EAAO8C,SAEhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAO+C,SAApB,sCACA,cAAC,EAAD,CAAMlE,MAAOmB,EAAO2D,WAApB,mBACA,cAAC,IAAD,CACEtD,MAAM,SACN4C,cAAc,kIAEhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,4DAKpB,cAAC,IAAD,CAASR,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAO4D,WAAvD,SACE,eAAC7B,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,GAEfpC,MAAM,OACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,kGAEPtB,MAAOmB,EAAO8C,SAEhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAO6D,eAApB,kCACA,cAAC,EAAD,CAAMhF,MAAOmB,EAAO8D,YAApB,8BACA,cAAC,IAAD,CACEzD,MAAM,KACN4C,cAAc,oFAEhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,6GAMtB,eAAC,EAAD,CACEpE,MAAO,CACL0D,QAAS,OACTC,cAAe,OAHnB,UAME,cAAC,IAAD,CAASC,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAO+D,WAAvD,SACE,eAAChC,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,GAEfpC,MAAM,OACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,8EAEPtB,MAAOmB,EAAO8C,OACd7D,MAAM,UAER,cAAC,EAAD,CAAMJ,MAAOmB,EAAOgE,aAApB,2BACA,cAAC,EAAD,CAAMnF,MAAOmB,EAAOiE,YAApB,gCACA,cAAC,IAAD,CACE5D,MAAM,eACN4C,cAAc,yGAEhB,cAAC,IAAD,CACE5C,MAAM,OACN4C,cAAc,wFAKpB,cAAC,IAAD,CAASR,UAAW,EAAGC,SAAS,SAAS7D,MAAOmB,EAAOkE,SAAvD,SACE,eAACnC,EAAA,EAAD,WACE,cAAC,IAAD,CACElD,MAAO,CACL+C,MAAO,cACPgB,WAAY,OACZrB,UAAW,GACXsB,YAAa,GAEfpC,MAAM,OACNxB,MAAM,UAER,cAAC,IAAD,CACEiB,MAAO,CACLC,IAAK,6DAEPtB,MAAOmB,EAAO8C,SAEhB,cAAC,EAAD,CAAMjE,MAAOmB,EAAOgE,aAApB,6BACA,cAAC,EAAD,CAAMnF,MAAOmB,EAAOmE,UAApB,0BACA,cAAC,IAAD,CACE9D,MAAM,OACN4C,cAAc,qHAEhB,cAAC,IAAD,CAAU5C,MAAM,OAAO4C,cAAc,yCASnD,IAAMjD,EAASkB,IAAWC,OAAO,CAC/B2B,OAAQ,CACNvB,UAAW,GACXqB,WAAY,KAEdO,cAAe,CACb3B,SAAU,GACVoB,WAAY,IACZrB,UAAW,EACXtC,MAAO,SAETgB,UAAW,CACTmB,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBjB,MAAO,CACLkB,UAAW,GACXC,SAAU,GACVC,WAAY,QAEdjB,UAAW,CACTkB,eAAgB,GAChBC,OAAQ,EACRC,MAAO,OAEToB,aAAc,CACZxB,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,IACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAET6E,YAAa,CACXtC,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,IACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAETgF,YAAa,CACXzC,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,IACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAETkF,UAAW,CACT3C,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,IACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAET0E,WAAY,CACVnC,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,IACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAETmF,eAAgB,CACd5C,SAAU,GACVC,WAAY,OACZF,UAAW,GACXqB,WAAY,IACZC,YAAa,OACbU,aAAc,GACdtE,MAAO,SAET8D,SAAU,CACRvB,SAAU,GACVD,UAAW,EACXqB,WAAY,IACZ3D,MAAO,SAET+E,aAAc,CACZxC,SAAU,GACVD,UAAW,EACXqB,WAAY,IACZ3D,MAAO,SAET4E,eAAgB,CACdrC,SAAU,GACVD,UAAW,EACXqB,WAAY,IACZ3D,MAAO,SAEToE,SAAU,CACRjC,KAAM,EACNO,OAAQ,cACRC,MAAO,IACP4B,OAAQ,GACRrE,gBAAiB,WAEnB+E,SAAU,CACR9C,KAAM,EACNQ,MAAO,IACP4B,OAAQ,GACRrE,gBAAiB,WAEnBkF,cAAe,CACbjD,KAAM,EACNO,OAAQ,cACRC,MAAO,IACP4B,OAAQ,GACRrE,gBAAiB,WAEnBuE,UAAW,CACTtC,KAAM,EACNQ,MAAO,IACP4B,OAAQ,GACRrE,gBAAiB,UACjBwC,OAAQ,eAEViC,WAAY,CACVxC,KAAM,EACNQ,MAAO,IACP4B,OAAQ,GACRrE,gBAAiB,UACjBwC,OAAQ,eAEVoC,WAAY,CACV3C,KAAM,EACNQ,MAAO,IACP4B,OAAQ,GACRrE,gBAAiB,UACjBwC,OAAQ,iBChSG2C,GAxBqC,CAClDC,SAAU,C,OAAC1D,EAAgB,MAC3B2D,OAAQ,CACNC,QAAS,CACPC,KAAM,CACJD,QAAS,CACPE,OAAQ,CACNF,QAAS,CACPpC,aAAc,QAGlBuC,OAAQ,CACNH,QAAS,CACPhB,aAAc,UAKtBoB,MAAO,QACPC,SAAU,OCGD,SAASC,GAAT,GAIX,IAHFC,EAGC,EAHDA,YAIA,OACE,cAACC,EAAA,EAAD,CACEX,QAASY,GACTzG,MAAuB,SAAhBuG,EAAyBG,IAAYC,IAF9C,SAIE,cAACC,GAAD,MASN,IAAMC,GAAQC,cAEd,SAASF,KACP,OACE,eAACC,GAAME,UAAP,WACE,cAACF,GAAMG,OAAP,CACEnG,KAAK,OACLoG,UAAWC,GACXC,QAAS,CAAEC,aAAa,KAE1B,cAACP,GAAMG,OAAP,CACEnG,KAAK,WACLoG,UAAW7D,EACX+D,QAAS,CAAEvF,MAAO,WAEpB,cAACiF,GAAMQ,MAAP,CAAaC,cAAe,CAAEC,aAAc,SAA5C,SACE,cAACV,GAAMG,OAAP,CAAcnG,KAAK,QAAQoG,UAAWtG,SAU9C,IAAM6G,GAAYC,cAElB,SAASP,KACP,IAAMX,EAAcnH,IAEpB,OACE,eAACoI,GAAUT,UAAX,CACEW,iBAAiB,SACjBJ,cAAe,CACbK,sBAAuBzH,EAAOqG,GAAa9G,MAH/C,UAME,cAAC+H,GAAUR,OAAX,CACEnG,KAAK,SACLoG,UAAWrD,EACXuD,QAAS,gBAAG9D,EAAH,EAAGA,WAAH,MAAmD,CAC1DzB,MAAO,aACPgG,WAAY,gBAAGpH,EAAH,EAAGA,MAAH,OACV,cAACqH,EAAA,EAAD,CAAehH,KAAK,OAAOc,KAAM,GAAInB,MAAOA,KAE9CsH,YAAa,kBACX,cAACC,EAAA,EAAD,CACE5F,QAAS,kBAAMkB,EAAW2E,SAAS,UACnC5H,MAAO,kBAAkB,CACvB6H,QADK,EAAGC,QACW,GAAM,IAH7B,SAME,cAACC,EAAA,EAAD,CACEtH,KAAK,cACLc,KAAM,GACNnB,MAAON,EAAOqG,GAAahH,KAC3Ba,MAAO,CAAEgE,YAAa,aAMhC,cAACoD,GAAUR,OAAX,CACEnG,KAAK,SACLoG,UAAWjC,EACXmC,QAAS,gBAAG9D,EAAH,EAAGA,WAAH,MAAmD,CAC1DzB,MAAO,WACPgG,WAAY,gBAAGpH,EAAH,EAAGA,MAAH,OACV,cAAC4H,EAAA,EAAD,CACEvH,KAAK,mBACLc,KAAM,GACNnB,MAAOA,KAGXsH,YAAa,kBACX,cAACC,EAAA,EAAD,CACE5F,QAAS,kBAAMkB,EAAW2E,SAAS,UACnC5H,MAAO,kBAAkB,CACvB6H,QADK,EAAGC,QACW,GAAM,IAH7B,SAME,cAACC,EAAA,EAAD,CACEtH,KAAK,cACLc,KAAM,GACNnB,MAAON,EAAOqG,GAAahH,KAC3Ba,MAAO,CAAEgE,YAAa,gBCnIvB,SAASiE,KACtB,IAAMC,ECHO,WACb,MAAgD1H,oBAAS,GAAzD,WAAO0H,EAAP,KAA0BC,EAA1B,KAyBA,OAtBApH,qBAAU,WACR,EAAAqH,EAAAC,OAAA,gEAEIC,MAFJ,WAAAF,EAAA,MAKUG,IAAA,OACDR,IAAYS,MADX,IAEJ,aAAcC,EAAQ,SAP5B,sDAWIC,QAAQC,KAAR,MAXJ,uBAaIR,GAAmB,GACnBG,MAdJ,mFAmBC,IAEIJ,EDvBmBU,GACpBzC,EAAcnH,IAEpB,OAAKkJ,EAID,eAAC,IAAD,WACE,cAAChC,GAAD,CAAYC,YAAaA,IACzB,cAACjE,EAAA,EAAD,OALG,O,0DEZX2G,EAAOC,QAAU,IAA0B,iC","file":"static/js/app.04c59ab5.chunk.js","sourcesContent":["import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport { Platform, StyleSheet, Linking } from \"react-native\";\n\nimport { Text, View } from \"../components/Themed\";\nimport { TextInput, Button, Avatar } from \"@react-native-material/core\";\nimport { useState, useEffect } from \"react\";\n\nexport default function ModalScreen() {\n  const [name, setName] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n  const [href, setHref] = useState(\"\");\n\n  const updateAnchorHref = () => {\n    const subject = encodeURIComponent(`Hey Amogh, ${name} here`);\n    setHref(\n      `mailto:amogh4200@gmail.com?subject=${subject}&body=${encodeURIComponent(\n        msg\n      )}`\n    );\n  };\n\n  useEffect(() => {\n    if (name && msg) {\n      updateAnchorHref();\n    }\n  }, [name, msg]);\n\n  return (\n    <View style={styles.container}>\n      <Avatar\n        image={{\n          uri: \"https://media-exp1.licdn.com/dms/image/C4E03AQEMEaFrt6meBA/profile-displayphoto-shrink_400_400/0/1577499359514?e=1647475200&v=beta&t=XG3q2WLmYtbQVBCpphvBiAsyg_tMFV7LaNbpn8aR1F8\",\n        }}\n        size={120}\n      />\n      <Text style={styles.title}>Contact</Text>\n      <Text style={styles.marginTop10}>\n        <i>\n          You can reach me either via email or {}\n          <a href=\"https://www.linkedin.com/in/amogh-jar\" target=\"_blank\">\n            LinkedIn\n          </a>\n        </i>\n      </Text>\n\n      <View\n        style={styles.separator}\n        lightColor=\"#eee\"\n        darkColor=\"rgba(255,255,255,0.1)\"\n      />\n\n      <TextInput label=\"Your Name\" onChangeText={(name) => setName(name)} />\n\n      <TextInput\n        label=\"Brief Message\"\n        style={styles.marginTop20}\n        onChangeText={(msg) => setMsg(msg)}\n      />\n\n      <Button\n        title=\"Email\"\n        style={styles.marginTop20}\n        onPress={() => href && Linking.openURL(href)}\n      ></Button>\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === \"ios\" ? \"light\" : \"auto\"} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  marginTop10: {\n    marginTop: 10,\n  },\n  marginTop20: {\n    marginTop: 20,\n  },\n  title: {\n    marginTop: 20,\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n});\n","import * as React from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\n\nimport { RootStackScreenProps } from \"../types\";\n\nexport default function NotFoundScreen({\n  navigation,\n}: RootStackScreenProps<\"NotFound\">) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity\n        onPress={() => navigation.replace(\"Root\")}\n        style={styles.link}\n      >\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: \"#2e78b7\",\n  },\n});\n","import { ScrollView, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport { Avatar, Chip, ListItem, Surface } from \"@react-native-material/core\";\nimport { Text, View } from \"../components/Themed\";\nimport { RootTabScreenProps } from \"../types\";\n\nexport default function TabOneScreen({\n  navigation,\n}: RootTabScreenProps<\"TabOne\">) {\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <Text style={styles.title}>As a Professional</Text>\n        <View\n          style={styles.separator}\n          lightColor=\"#eee\"\n          darkColor=\"rgba(255,255,255,0.1)\"\n        />\n        <View\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Surface elevation={6} category=\"medium\" style={styles.card}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 10,\n                }}\n                label=\"May 2020 - Present\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://media.glassdoor.com/sqll/1953205/medsys-software-solutions-squarelogo-1527595058646.png\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n\n              <Text style={styles.position}>Software Engineering Co-Op</Text>\n              <Text style={styles.companyTitle}>MEDsys Software Solutions</Text>\n\n              <ListItem\n                title=\"C#\"\n                secondaryText=\"Designed and developed keyboard functionality for various active\n            server pages of a web app using jQuery, JS, and C#\"\n              />\n              <ListItem\n                title=\"SQL Server\"\n                secondaryText=\"Designed and developed various SQL scripts to clean and manage\n            existing patient and staff data\"\n              />\n              <ListItem\n                title=\"Work, Work, Work\"\n                secondaryText=\"Debugged, resolved, and tested various production issues across\n            the stack with over 165 approved pull requests\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"C#, JavaScript, jQuery, SQL Server, and Git\"\n              />\n            </TouchableOpacity>\n          </Surface>\n          <Surface elevation={6} category=\"medium\" style={styles.crownCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 10,\n                }}\n                label=\"Aug 2019 - Dec 2019\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://i.forbesimg.com/media/lists/companies/crown-equipment_416x416.jpg\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n              <Text style={styles.blackPosition}>\n                Software Engineering Co-Op\n              </Text>\n              <Text style={styles.blackCompanyTitle}>\n                Crown Equipment Corporation\n              </Text>\n              <ListItem\n                title=\"Java (SpringBoot)\"\n                secondaryText=\"Mostly worked on SpringBoot microservices, designed and developed a solution to fix a\n              prod issue when migrating a rental truck's software to a newer\n              version\"\n              />\n              <ListItem\n                title=\"Angular, Node.js\"\n                secondaryText=\"Developed new versions of deprecated front-end Angular\n                components in TypeScript\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"Angular, Java (SpringBoot MVC), AWS Aurora, MySQL, Kibana, and Git\"\n              />\n            </TouchableOpacity>\n          </Surface>\n          <Surface elevation={6} category=\"medium\" style={styles.utmcCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 5,\n                }}\n                label=\"Aug 2019 - Dec 2019\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://www.toledoblade.com/image/2011/07/02/800x_b1_cCM_z/ut-logo-utmc-heart-transplants.jpg\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n              <Text style={styles.utmcPosition}>Student IT Technician</Text>\n              <Text style={styles.companyTitle}>\n                University of Toledo (UTMC)\n              </Text>\n              <ListItem\n                title=\"Python\"\n                secondaryText=\"Designed and developed a python script for the desktop\n              support team at the UTMC (Medical Center), to help mass-register\n              hundreds of new computers on the iSupport portal in seconds\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"Technologies used: Nexpose, Python, and Selenium (web driver)\"\n              />\n            </TouchableOpacity>\n          </Surface>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatar: {\n    marginTop: 15,\n    marginLeft: 170,\n  },\n  blackCompanyTitle: {\n    color: \"black\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 50,\n    marginRight: \"auto\",\n    marginBottom: 10,\n  },\n  blackPosition: {\n    fontSize: 15,\n    marginLeft: 110,\n    marginTop: 5,\n    color: \"black\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  companyTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 70,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  position: {\n    fontSize: 15,\n    marginTop: 5,\n    marginLeft: 110,\n    color: \"white\",\n  },\n  utmcPosition: {\n    fontSize: 15,\n    marginTop: 5,\n    marginLeft: 130,\n    color: \"white\",\n  },\n  title: {\n    marginTop: 75,\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  crownCard: {\n    flex: 1,\n    width: 400,\n    height: \"fit-content\",\n    margin: 20,\n    backgroundColor: \"#FBC02D\",\n    color: \"black\",\n  },\n  utmcCard: {\n    flex: 1,\n    width: 400,\n    height: \"fit-content\",\n    margin: 20,\n    backgroundColor: \"#1E88E5\",\n    color: \"black\",\n  },\n  card: {\n    flex: 1,\n    width: 400,\n    height: \"fit-content\",\n    margin: 20,\n    backgroundColor: \"purple\",\n  },\n});\n","import { ScrollView, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport { Avatar, Chip, ListItem, Surface } from \"@react-native-material/core\";\nimport { Text, View } from \"../components/Themed\";\n\nexport default function TabTwoScreen() {\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <Text style={styles.title}>As a Student</Text>\n        <View\n          style={styles.separator}\n          lightColor=\"#eee\"\n          darkColor=\"rgba(255,255,255,0.1)\"\n        />\n        <View\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Surface elevation={6} category=\"medium\" style={styles.utmcCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 5,\n                }}\n                label=\"2021\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://raw.githubusercontent.com/stefangabos/zebrajs/master/docs/images/logo.png\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n              <Text style={styles.position}>Open Source Contribution</Text>\n              <Text style={styles.companyTitle}>Zebra Tooltips</Text>\n              <ListItem\n                title=\"JavaScript and jQuery\"\n                secondaryText=\"Added accessibility, in the form of keyboard functionality, to an open source lightweight tooltip library to show/hide content when it gains/loses focus\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"Technologies used: JavaScript and jQuery\"\n              />\n            </TouchableOpacity>\n          </Surface>\n\n          <Surface elevation={6} category=\"medium\" style={styles.pySQLCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 5,\n                }}\n                label=\"2021\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://www.pngitem.com/pimgs/m/31-312064_programming-icon-png-python-logo-512-transparent-png.png\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n              <Text style={styles.position}>Open Source Contribution</Text>\n              <Text style={styles.pySQLTitle}>PySQL</Text>\n              <ListItem\n                title=\"Python\"\n                secondaryText=\"Wrote a script to automate SQL Server commands, in my case this was used to regain admin/master privileges on QA environments\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"Technologies used: Python, PyODBC, and SQL Alchemy\"\n              />\n            </TouchableOpacity>\n          </Surface>\n\n          <Surface elevation={6} category=\"medium\" style={styles.flightCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 5,\n                }}\n                label=\"2021\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://static.vecteezy.com/system/resources/thumbnails/000/620/311/small/aviation_logo-06.jpg\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n              <Text style={styles.flightPosition}>Software Engineering</Text>\n              <Text style={styles.flightTitle}>Flight Scheduler</Text>\n              <ListItem\n                title=\"C#\"\n                secondaryText=\"Designed and developed a simple flight scheduling desktop app, lead a team of 3\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"Technologies used: C# (.NET Framework 4.8), Windows Forms, SQL Server, Entity Framework, and Git\"\n              />\n            </TouchableOpacity>\n          </Surface>\n        </View>\n\n        <View\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <Surface elevation={6} category=\"medium\" style={styles.recipeCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 5,\n                }}\n                label=\"2021\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://spoonacular.com/application/frontend/images/spoonacular-logo-b.svg\",\n                }}\n                style={styles.avatar}\n                color=\"green\"\n              ></Avatar>\n              <Text style={styles.telePosition}>Senior Design</Text>\n              <Text style={styles.recipeTitle}>Ingredient Scanner</Text>\n              <ListItem\n                title=\"React Native\"\n                secondaryText=\"Lead the design and development of a mobile app for scanning and tracking ingredients in a team of 6\"\n              />\n              <ListItem\n                title=\"Tech\"\n                secondaryText=\"Technologies used: React Native, AWS Cognito, JavaScript + TypeScript, and Git\"\n              />\n            </TouchableOpacity>\n          </Surface>\n\n          <Surface elevation={6} category=\"medium\" style={styles.teleCard}>\n            <TouchableOpacity>\n              <Chip\n                style={{\n                  width: \"fit-content\",\n                  marginLeft: \"auto\",\n                  marginTop: 10,\n                  marginRight: 5,\n                }}\n                label=\"2017\"\n                color=\"black\"\n              />\n              <Avatar\n                image={{\n                  uri: \"https://image.flaticon.com/icons/png/512/1533/1533105.png\",\n                }}\n                style={styles.avatar}\n              ></Avatar>\n              <Text style={styles.telePosition}>Private Project</Text>\n              <Text style={styles.teleTitle}>Telegram Bot</Text>\n              <ListItem\n                title=\"Java\"\n                secondaryText=\"Designed and developed a bot for Telegram (Internet Messaging App) to regulate group chats and entertain members\"\n              />\n              <ListItem title=\"Tech\" secondaryText=\"Technologies used: Java\" />\n            </TouchableOpacity>\n          </Surface>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  avatar: {\n    marginTop: 15,\n    marginLeft: 170,\n  },\n  blackPosition: {\n    fontSize: 15,\n    marginLeft: 110,\n    marginTop: 5,\n    color: \"black\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    marginTop: 75,\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\",\n  },\n  companyTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 130,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  flightTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 125,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  recipeTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 110,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  teleTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 130,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  pySQLTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 160,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  pySupportTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginTop: 10,\n    marginLeft: 130,\n    marginRight: \"auto\",\n    marginBottom: 10,\n    color: \"white\",\n  },\n  position: {\n    fontSize: 15,\n    marginTop: 5,\n    marginLeft: 110,\n    color: \"white\",\n  },\n  telePosition: {\n    fontSize: 15,\n    marginTop: 5,\n    marginLeft: 150,\n    color: \"white\",\n  },\n  flightPosition: {\n    fontSize: 15,\n    marginTop: 5,\n    marginLeft: 130,\n    color: \"white\",\n  },\n  utmcCard: {\n    flex: 1,\n    height: \"fit-content\",\n    width: 400,\n    margin: 20,\n    backgroundColor: \"#66BB6A\",\n  },\n  teleCard: {\n    flex: 1,\n    width: 400,\n    margin: 20,\n    backgroundColor: \"#F48FB1\",\n  },\n  pySupportCard: {\n    flex: 1,\n    height: \"fit-content\",\n    width: 400,\n    margin: 20,\n    backgroundColor: \"#F48FB1\",\n  },\n  pySQLCard: {\n    flex: 1,\n    width: 400,\n    margin: 20,\n    backgroundColor: \"#EF5350\",\n    height: \"fit-content\",\n  },\n  flightCard: {\n    flex: 1,\n    width: 400,\n    margin: 20,\n    backgroundColor: \"#81D4FA\",\n    height: \"fit-content\",\n  },\n  recipeCard: {\n    flex: 1,\n    width: 400,\n    margin: 20,\n    backgroundColor: \"#CE93D8\",\n    height: \"fit-content\",\n  },\n});\n","/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n        },\n      },\n      Modal: 'modal',\n      NotFound: '*',\n    },\n  },\n};\n\nexport default linking;\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport {\n  FontAwesome,\n  MaterialIcons,\n  MaterialCommunityIcons,\n} from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport * as React from \"react\";\nimport { View, ColorSchemeName, Pressable } from \"react-native\";\n\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport {\n  RootStackParamList,\n  RootTabParamList,\n  RootTabScreenProps,\n} from \"../types\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\n\nexport default function Navigation({\n  colorScheme,\n}: {\n  colorScheme: ColorSchemeName;\n}) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === \"dark\" ? DarkTheme : DefaultTheme}\n    >\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={BottomTabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"NotFound\"\n        component={NotFoundScreen}\n        options={{ title: \"Oops!\" }}\n      />\n      <Stack.Group screenOptions={{ presentation: \"modal\" }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}\n    >\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<\"TabOne\">) => ({\n          title: \"Experience\",\n          tabBarIcon: ({ color }) => (\n            <MaterialIcons name=\"work\" size={30} color={color} />\n          ),\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate(\"Modal\")}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}\n            >\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={({ navigation }: RootTabScreenProps<\"TabTwo\">) => ({\n          title: \"Projects\",\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons\n              name=\"projector-screen\"\n              size={30}\n              color={color}\n            />\n          ),\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate(\"Modal\")}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}\n            >\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>[\"name\"];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n","import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <SafeAreaProvider>\n        <Navigation colorScheme={colorScheme} />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}